Layout/LeadingCommentSpace:
  AllowRBSInlineAnnotation: true

# Commonly used screens these days easily fit more than 80 characters.
Layout/LineLength:
  Max: 240

# Too short methods lead to extraction of single-use methods, which can make
# the code easier to read (by naming things), but can also clutter the class
Metrics/MethodLength: 
  Max: 240 

# The guiding principle of classes is SRP, SRP can't be accurately measured by LoC
Metrics/ClassLength:
  Max: 2400

# Single quotes being faster is hardly measurable and only affects parse time.
# Enforcing double quotes reduces the times where you need to change them
# when introducing an interpolation. Use single quotes only if their semantics
# are needed.
Style/StringLiterals:
  EnforcedStyle: double_quotes

Style/RescueModifier:
  Enabled: false

Style/GuardClause:
  Enabled: true
  AutoCorrect: false

Style/SingleArgumentDig:
  Enabled: false

# Shadowing outer local variables with block parameters is often useful
# to not reinvent a new name for the same thing, it highlights the relation
# between the outer variable and the parameter. The cases where it's actually
# confusing are rare, and usually bad for other reasons already, for example
# because the method is too long.
Lint/ShadowingOuterLocalVariable:
  Enabled: false


Style/MethodCallWithArgsParentheses:
  AllowedMethods:
    - bind

Style/Documentation:
  Enabled: false

Style/MultilineBlockChain:
  Enabled: false

Naming/MethodParameterName:
  Enabled: false
Naming/VariableNumber:
  Enabled: false
Naming/PredicateName:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/AbcSize:
  Enabled: false
Metrics/BlockLength:
  Enabled: false
Metrics/PerceivedComplexity:
  Enabled: false
Metrics/CyclomaticComplexity:
  Enabled: false
Metrics/ParameterLists:
  Enabled: false
Metreics/BlockNesting:
  Enabled: false